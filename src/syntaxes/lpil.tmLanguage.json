{
  "information_for_contributors": [
    "This json file was auto generated by a much-more-readable ruby file",
    "(e.g. don't edit it directly)"
  ],
  "version": "0.0.1",
  "name": "LPiL",
  "scopeName": "source.lpil",
  "fileTypes": [
    "tex"
  ],
  "patterns": [
    {
      "include": "#ambles"
    },
    {
      "include": "#components"
    },
    {
      "include": "#newcodetype"
    },
    {
      "include": "#lpilcode"
    },
    {
      "include": "#lpilbuild"
    },
    {
      "include": "#lpilRequires"
    },
    {
      "include": "#lpilCreates"
    }
  ],
  "repository": {
    "ambles": {
      "match": "\\%\\s+\\!LPiL\\s+(?:(?:preamble)|(?:postamble))\\s+=\\s+(\\S+)\\s",
      "captures": {
        "1": {
          "name": "keyword.control.amble.path.lpil"
        }
      },
      "name": "keyword.control.amble.lpil"
    },
    "components": {
      "match": "(?:(?:\\\\input)|(?:\\\\include))[\\[\\(\\{](\\S+)[\\]\\)\\}]",
      "captures": {
        "1": {
          "name": "keyword.control.simple.arg.lpil"
        }
      },
      "name": "keyword.control.structure.lpil"
    },
    "lpilbuild": {
      "begin": "\\\\begin\\{lpilBuild\\}[\\[\\(\\{](\\S+)[\\]\\)\\}][\\[\\(\\{](\\S+)[\\]\\)\\}]\\W",
      "end": "\\\\end\\{lpilBuild\\}\\W",
      "beginCaptures": {
        "0": {
          "name": "keyword.control.builddescription.start.lpil"
        },
        "1": {
          "name": "keyword.control.simple.arg.lpil"
        },
        "2": {
          "name": "keyword.control.simple.arg.lpil"
        }
      },
      "endCaptures": {
        "0": {
          "name": "keyword.control.builddescription.stop.lpil"
        }
      },
      "name": "keyword.control.builddescription.lpil",
      "contentName": "meta.control.builddescription",
      "patterns": [
        {
          "include": "#lpilrequires"
        },
        {
          "include": "#lpilcreates"
        },
        {
          "include": "#source.lpil"
        }
      ]
    },
    "lpilcode": {
      "begin": "\\\\begin\\{lpil\\:(\\w+)\\}[\\[\\(\\{](\\S+)[\\]\\)\\}]\\W",
      "end": "\\\\end\\{lpil\\:((?:\\1))\\}\\W",
      "beginCaptures": {
        "0": {
          "name": "keyword.control.source.start.lpil"
        },
        "1": {
          "name": "keyword.control.source.type.lpil"
        },
        "2": {
          "name": "keyword.control.simple.arg.lpil"
        }
      },
      "endCaptures": {
        "0": {
          "name": "keyword.control.source.stop.lpil"
        },
        "1": {
          "name": "keyword.control.source.type.lpil"
        }
      },
      "name": "source.lpilcode.lpil"
    },
    "lpilcreates": {
      "match": "\\\\lpilCreates[\\[\\(\\{](\\S+)[\\]\\)\\}][\\[\\(\\{](\\S+)[\\]\\)\\}]\\W",
      "captures": {
        "1": {
          "name": "keyword.control.simple.arg.lpil"
        },
        "2": {
          "name": "keyword.control.simple.arg.lpil"
        }
      },
      "name": "keyword.control.creates.lpil"
    },
    "lpilrequires": {
      "match": "\\\\lpilRequires[\\[\\(\\{](\\S+)[\\]\\)\\}][\\[\\(\\{](\\S+)[\\]\\)\\}]\\W",
      "captures": {
        "1": {
          "name": "keyword.control.simple.arg.lpil"
        },
        "2": {
          "name": "keyword.control.simple.arg.lpil"
        }
      },
      "name": "keyword.control.requires.lpil"
    },
    "newcodetype": {
      "match": "\\\\newCodeType[\\[\\(\\{](\\S+)[\\]\\)\\}][\\[\\(\\{](\\S+)[\\]\\)\\}]",
      "captures": {
        "1": {
          "name": "keyword.control.simple.arg.lpil"
        },
        "2": {
          "name": "keyword.control.simple.arg.lpil"
        }
      },
      "name": "keyword.control.newcodetype.lpil"
    }
  }
}